extract () {
  if [ -f $1 ] ; then
       case $1 in
	*.tar.bz2)	tar xvjf $1 ;;
	*.tar.gz)	tar xvzf $1 ;;
	*.tar.xz)	tar Jxvf $1 ;;
	*.bz2)		bunzip2 $1 ;;
	*.rar)		unrar x $1 ;;
	*.gz)		gunzip $1 ;;
	*.tar)		tar xvf $1 ;;
	*.tbz2)		tar xvjf $1 ;;
	*.tgz)		tar xvzf $1 ;;
	*.zip)		unzip $1 ;;
	*.Z)		uncompress $1 ;;
	*.7z)		7z x $1 ;;
	*)		echo "don't know how to extract '$1'..." ;;
      esac
  else
      echo "'$1' is not a valid file!"
  fi
}

authplain () {
  echo -n "Username: "
  read username
  echo -n "Password: "
  read -s password
  echo
  perl -MMIME::Base64 -e "print encode_base64(\"\000${username}\000${password}\")"
}

setrandmac () {
  old_mac=$(sudo ip link show wlan0 | perl -n -e '/link\/ether ([a-zA-Z0-9:]+)/ && print $1')
  new_mac=$(openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//')
  echo "Old mac: $old_mac"
  echo "New mac: $new_mac"
  sudo ip link set dev wlan0 down && \
  sudo ip link set dev wlan0 address $new_mac && \
  sudo ip link set dev wlan0 up
}

# vim: set ft=sh:
